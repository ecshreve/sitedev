slomad:
  name: 'Slomad'
  desc: 'Provides a minimal interface to the Nomad API, facilitating the planning and deployment of Nomad jobs.'
  repo: 'https://github.com/ecshreve/slomad'
  docs: 'https://pkg.go.dev/github.com/ecshreve/slomad'
jepp:
  name: 'Jepp'
  desc: 'This project is live, and provides an API for accessing over 100,000 Jeopardy clues. It uses a Go web server and Gin framework to expose endpoints for accessing historical Jeopardy data. The frontend/UI consists of HTML templates displaying Swagger docs and a sample request. The database used is SQLite, which replaced a deprecated MySQL setup, making the app easier to deploy and test.'
  repo: 'https://github.com/ecshreve/jepp'
  live: 'https://jepp.app'
jexplore:
  name: 'Jexplore'
  desc: 'Jexplore builds on the Jepp project, but focuses on generating as much code as possible from a single shema definition. It utilizes the ent framework to generate a GraphQL API, a React frontend, and a Go backend. The project is still a work in progress, but the goal is to provide a more robust API and frontend for accessing and exploring Jeopardy data.'
  repo: 'https://github.com/ecshreve/jexplore'
jeppy:
  name: 'Jeppy'
  desc: 'Jeppy is a project focused on playing historical Jeopardy games. It involves scraping Jeopardy questions and answers, dumping the data to a JSON file, populating a SQLite database, and providing a React app for gameplay. The backend is managed by a Flask app for database operations. The project uses Flask-Migrate for managing database migrations.'
  repo: 'https://github.com/ecshreve/jeppy'
